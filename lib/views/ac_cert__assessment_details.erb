<div id="assessment_details" class="govuk-body epc-blue-bottom printable-area">
  <h2 class="govuk-heading-l"><%= t('ac_cert.sections.assessment.title') %></h2>

  <%== erb :component__summary_list, locals: {
    list: {
      "inspection_date": date(assessment[:technicalInformation][:dateOfAssessment]),
      "inspection_level": assessment[:technicalInformation][:buildingComplexity],
      "assessment_software": assessment[:technicalInformation][:calculationTool],
      "declaration": party_disclosure(
        assessment[:relatedPartyDisclosure].nil? ? nil : assessment[:relatedPartyDisclosure], assessment[:relatedPartyDisclosure], "aci_disclosure_code", "ac_cert"
      ),
      "f_gas_compliant_date": (
        date(assessment[:technicalInformation][:fGasCompliantDate]) rescue assessment[:technicalInformation][:fGasCompliantDate]
      ),
      "total_effective_rated_output": (
        assessment[:technicalInformation][:acRatedOutput].nil? ? nil : [assessment[:technicalInformation][:acRatedOutput], t('unit.kilowatt')].join(" ")
      ),
      "system_sampling": t("ac_cert.sections.assessment.flags.#{assessment[:technicalInformation][:randomSampling]}"),
      "treated_floor_area": (
        assessment[:technicalInformation][:treatedFloorArea].nil? ? nil : [number_to_delimited(assessment[:technicalInformation][:treatedFloorArea]), t('unit.square_metres')].join(" ")
      ),
      "subsystems_metered": t("ac_cert.sections.assessment.flags.#{assessment[:technicalInformation][:acSystemMetered]}"),
      "refrigerant_charge": (
        assessment[:technicalInformation][:refrigerantCharge].nil? ? nil : [assessment[:technicalInformation][:refrigerantCharge], t('unit.kilogram')].join(" ")
      ),
    },
    translation_prefix: 'ac_cert.sections.assessment.',
    skip_null: true
  } %>
</div>
